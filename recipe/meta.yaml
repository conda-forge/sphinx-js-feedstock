{% set version = "3.2.0" %}

package:
  name: sphinx-js
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/s/sphinx-js/sphinx-js-{{ version }}.tar.gz
  sha256: 5f115cdc942164290346ae187853587a60e6aa8e75c220792bc365792280faee

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps

requirements:
  host:
    - pip
    - python >=3.7
  run:
    - jinja2 >2.0
    - markupsafe ==2.0.1
    - nodejs
    - parsimonious >=0.10.0,<0.11.0
    - python >=3.7
    - sphinx >=4.1.0,<6.0.0

test:
  requires:
    - pytest
    - python >=3.7
    - recommonmark
    - sphinx
    - pip
  source_files:
    - tests
  imports:
    - sphinx_js
  commands:
    - python -m pip check

about:
  home: https://github.com/mozilla/sphinx-js
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Autodoc-style extraction into Sphinx for your JS project

  description: |
    When you write a JavaScript library, how do you explain it to people? If
    it's a small project in a domain your users are familiar with, JSDoc's
    alphabetical list of routines might suffice. But in a larger project, it is
    useful to intersperse prose with your API docs without having to copy and
    paste things.

    sphinx-js lets you use the industry-leading Sphinx documentation tool with
    JS projects. It provides a handful of directives, patterned after the
    Python-centric autodoc ones, for pulling JSDoc-formatted documentation into
    reStructuredText pages. And, because you can keep using JSDoc in your code,
    you remain compatible with the rest of your JS tooling, like Google's
    Closure Compiler.

extra:
  recipe-maintainers:
    - bollwyvl
